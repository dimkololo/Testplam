// ============================
//  PLAM WEBAPP CORE LOGIC
// ============================

// Telegram WebApp SDK –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (–µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç –≤–Ω—É—Ç—Ä–∏ Telegram)
if (window.Telegram && window.Telegram.WebApp) {
  const tg = window.Telegram.WebApp;
  tg.expand(); // –¥–µ–ª–∞–µ—Ç webapp –Ω–∞ –≤—Å—é –≤—ã—Å–æ—Ç—É
  console.log("Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
}

// ============================
//  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–∞–ª–∫–∞–º–∏
// ============================
const modalRoot = document.querySelector('[data-modal-root]');
const modalContent = document.querySelector('[data-modal-content]');

const ScrollLock = {
  lock() { document.documentElement.style.overflow = 'hidden'; },
  unlock() { document.documentElement.style.overflow = ''; }
};

function openModal(id) {
  const tpl = document.getElementById(`tpl-${id}`);
  if (!tpl) {
    console.warn("–®–∞–±–ª–æ–Ω –ø–æ–ø–∞–ø–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω:", id);
    return;
  }

  modalContent.innerHTML = "";
  modalContent.appendChild(tpl.content.cloneNode(true));

  modalRoot.hidden = false;
  modalRoot.setAttribute("aria-hidden", "false");
  ScrollLock.lock();

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ø–∞–ø–∞
  if (id === "upload-popup") initUploadPopup();
}

function closeModal() {
  modalRoot.hidden = true;
  modalRoot.setAttribute("aria-hidden", "true");
  modalContent.innerHTML = "";
  ScrollLock.unlock();
}

// –°–ª—É—à–∞—Ç–µ–ª–∏ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ/–∑–∞–∫—Ä—ã—Ç–∏–µ
document.addEventListener("click", (e) => {
  const opener = e.target.closest("[data-open-modal]");
  if (opener) {
    const id = opener.getAttribute("data-open-modal");
    openModal(id);
    return;
  }

  if (e.target.matches("[data-dismiss]") || e.target.closest("[data-dismiss]")) {
    closeModal();
  }
});

document.addEventListener("keydown", (e) => {
  if (e.key === "Escape" && !modalRoot.hidden) closeModal();
});

// ============================
//  –õ–æ–≥–∏–∫–∞ –ø–æ–ø–∞–ø–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ
// ============================
function initUploadPopup() {
  const root = modalRoot.querySelector(".upload-popup");
  if (!root) return;

  // 1Ô∏è‚É£ –í—ã–±—Ä–∞—Ç—å —Ñ–æ—Ç–æ
  const fileInput = root.querySelector("#file-input");
  const labelBtn = root.querySelector(".div2");
  if (labelBtn && fileInput) {
    labelBtn.addEventListener("click", () => fileInput.click());
    fileInput.addEventListener("change", () => {
      if (fileInput.files.length > 0) {
        console.log("–í—ã–±—Ä–∞–Ω–æ —Ñ–æ—Ç–æ:", fileInput.files[0].name);
      }
    });
  }

  // 2Ô∏è‚É£ –°–ª–∞–π–¥–µ—Ä stars/sec
  const range = root.querySelector(".range");
  const starsEl = root.querySelector("[data-stars]");
  const secsEl = root.querySelector("[data-secs]");
  const plural = (n, one, many) => (n === 1 ? one : many);

  if (range && starsEl && secsEl) {
    const update = () => {
      const v = parseInt(range.value, 10);
      starsEl.textContent = `${v} ${plural(v, "star", "stars")}`;
      secsEl.textContent = `${v} sec`;
    };
    range.addEventListener("input", update);
    update();
  }

  // 3Ô∏è‚É£ –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –∏—Å—á–µ–∑–∞—é—Ç –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ, –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç—Å—è –ø—Ä–∏ blur
  const phFields = root.querySelectorAll("[data-ph]");
  phFields.forEach((el) => {
    const original = el.getAttribute("data-ph") || "";
    el.addEventListener("focus", () => {
      el.setAttribute("data-ph", el.placeholder);
      el.placeholder = "";
    });
    el.addEventListener("blur", () => {
      if (!el.value.trim()) el.placeholder = original;
    });
  });

  // 4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
  const form = root.querySelector("[data-upload-form]");
  if (form) {
    form.addEventListener("submit", (e) => {
      e.preventDefault();

      const formData = new FormData(form);
      const social = formData.get("social");
      const desc = formData.get("desc");

      console.log("–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:", { social, desc });

      // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ Telegram
      if (window.Telegram && window.Telegram.WebApp) {
        const tg = window.Telegram.WebApp;
        tg.sendData(JSON.stringify({ social, desc }));
        tg.close(); // –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å webapp –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      }

      closeModal();
    });
  }
}

// ============================
//  –ì–æ—Ç–æ–≤–æ!
// ============================
console.log("app.js –ø–æ–¥–∫–ª—é—á–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç üëç");
